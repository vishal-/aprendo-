// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  id        Int      @id @default(autoincrement())
  name      String   // e.g. "Grade 1", "Grade 5"
  isBase    Boolean
  ownerId   String
  owner     UserInfo @relation("CourseOwner", fields: [ownerId], references: [uid])
  subjects  Subject[]
}

model Subject {
  id        Int      @id @default(autoincrement())
  name      String   // e.g. "Mathematics", "Science"
  isBase    Boolean
  ownerId   String
  courseId  Int
  owner     UserInfo @relation("SubjectOwner", fields: [ownerId], references: [uid])
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  topics    Topic[]
  @@unique([name, courseId])
}

model Topic {
  id        Int      @id @default(autoincrement())
  name      String   // e.g. "Operations", "Geometry"
  isBase    Boolean
  ownerId   String
  subjectId Int
  owner     UserInfo @relation("TopicOwner", fields: [ownerId], references: [uid])
  subject   Subject  @relation(fields: [subjectId], references: [id], onDelete: Cascade)
  subtopics Subtopic[]
}

model Subtopic {
  id        Int      @id @default(autoincrement())
  name      String   // e.g. "Addition", "Subtraction"
  isBase    Boolean
  ownerId   String
  topicId   Int
  owner     UserInfo @relation("SubtopicOwner", fields: [ownerId], references: [uid])
  topic     Topic    @relation(fields: [topicId], references: [id], onDelete: Cascade)
}

model UserInfo {
  uid              String   @id @default(cuid())
  email            String   @unique
  profilePicture   String
  phone            String
  phoneVerified    Boolean
  termsAccepted    Boolean
  termsAcceptedAt  DateTime
  createdAt        DateTime @default(now())
  displayName      String
  role             UserRole

  courses          Course[]        @relation("CourseOwner")
  subjects         Subject[]       @relation("SubjectOwner")
  topics           Topic[]         @relation("TopicOwner")
  subtopics        Subtopic[]      @relation("SubtopicOwner")
}

enum UserRole {
  admin
  parent
  tutor
  student
  moderator
  academy
}
